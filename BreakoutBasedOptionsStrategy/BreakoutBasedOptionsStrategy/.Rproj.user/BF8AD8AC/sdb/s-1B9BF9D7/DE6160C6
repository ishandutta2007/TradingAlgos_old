{
    "contents" : "library(httr)\nlibrary(plyr)\nlibrary(XML)\nlibrary(stringr)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(data.table)\nrm(list = ls())\nf = 2\nis.stoploss.enabled = F\nis.target.enabled = F\n\nPosBrkout.call.expiry.hit = 0\nPosBrkout.put.expiry.hit = 0\nPosBrkout.call.target.hit = 0\nPosBrkout.put.target.hit = 0\nPosBrkout.call.stoploss.hit = 0\nPosBrkout.put.stoploss.hit = 0\n\nNegBrkout.call.expiry.hit = 0\nNegBrkout.put.expiry.hit = 0\nNegBrkout.call.target.hit = 0\nNegBrkout.put.target.hit = 0\nNegBrkout.call.stoploss.hit = 0\nNegBrkout.put.stoploss.hit = 0\n\nmin.buy.value = 1\npos.beakout.val = 7\nneg.beakout.val = -5\n\nexp.dates <- c(\"28-01-2016\",\"25-02-2016\",\"31-03-2016\",\"28-04-2016\")#\"26-05-2016\"\"30-06-2016\"\n#exp.dates <- c(\"31-03-2016\")\nbase <- \"/Users/dutishan/Desktop/NSECEPE/\"\n\ngg.scrip.returns <- data.frame();\nget.symbols <- function() {\n  url <- paste0(\"https://www.nseindia.com/content/fo/fo_underlyinglist.htm\")\n  response <- GET(url, user_agent(\"Mozilla\"))\n  tf <- tempfile()\n  writeBin(content(response, \"raw\"), tf)\n  tables <- readHTMLTable(tf)\n  symbols <- as.vector(tables[4]$'NULL'$Symbol)\n  return(symbols)# symbols <- c(\"AJANTPHARM\")\n}\n\nprepapre.csv.useful <- function(files) {\n  csv.useful <- data.frame()\n  ord <- c()\n  for (i in 1:length(files)) {\n    ord <- c(ord,lapply(files,strsplit,\"_\")[[i]][[1]][3])\n  }\n  df=data.frame(files <- as.character(files),order <- as.numeric(ord))\n  df=df[with(df, order(order)), ]\n  files <- as.character(df$files)\n  for (i in 1:length(files)) {\n    csv_i <- read.csv(paste0(base,expiryDate,\"/\",files[i]))\n    strnameCE = paste0(\"CE.\",csv_i$Strike.Price[1])\n    csv_i[strnameCE] <- csv_i$CE.LTP\n    strnamePE = paste0(\"PE.\",csv_i$Strike.Price[1])\n    csv_i[strnamePE] <- csv_i$PE.LTP\n    if (i == 1) {\n      csv.useful <- csv_i[c(\"Date\", \"Underlying.Value\", strnameCE, strnamePE)]\n    } else {\n      csv_i_needed <- csv_i[c(\"Date\", \"Underlying.Value\", strnameCE, strnamePE)]\n      csv.useful <- merge(csv.useful, csv_i_needed, by.x=c(\"Date\", \"Underlying.Value\"), by.y=c(\"Date\", \"Underlying.Value\"), all = TRUE)\n    }\n    csv.useful$Date <- as.Date(csv.useful$Date)\n    csv.useful <- csv.useful[with(csv.useful, order(Date)), ]\n  }\n  csv.useful$Value.Change <- c(0,diff(csv.useful$Underlying.Value)/csv.useful$Underlying.Value[ - 1])*100\n  return(csv.useful)\n}\n\nget.firsts <- function(files, csv.useful) {\n  first.idx <- list()\n  first.idx$all.strikes.day <- which.max(complete.cases(csv.useful))\n\n  if(csv.useful$Value.Change[1]>=pos.beakout.val) {\n    first.idx$pos.breakout = 1\n  } else {\n    first.idx$pos.breakout <- which.max(csv.useful$Value.Change>=pos.beakout.val)\n    if(first.idx$pos.breakout == 1) first.idx$pos.breakout = - 1\n  }\n\n  if(csv.useful$Value.Change[1] <= neg.beakout.val) {\n    first.idx$neg.beakout.idx = 1\n  } else {\n    first.idx$neg.beakout <- which.max(csv.useful$Value.Change <= neg.beakout.val)\n    if(first.idx$neg.beakout == 1)first.idx$neg.beakout = - 1\n  }\n\n  csv.useful_long <- melt(csv.useful[, !(names(csv.useful) %in% c(\"Underlying.Value\"))], id = \"Date\")\n  l <- (strsplit(as.character(unique(csv.useful_long$variable)),\"E.\"))\n  strikes <- c()\n  for(i in 1:length(l)) {\n    strikes <- c(strikes,as.vector(l[i])[[1]][2])\n  }\n  strikes <- c(NA,NA,strikes)\n\n  first.idx$closest.above <- NULL\n  first.idx$closest.below <- NULL\n  for(day in 1:nrow(csv.useful)) {\n    strike.diff <- as.numeric(strikes) - csv.useful$Underlying.Value[day]\n    temp = strike.diff\n    temp[strike.diff<0]=NA\n    temp[is.na(csv.useful[day,])]=NA\n    if(all(is.na(temp))) {\n      first.idx$closest.above <- c(first.idx$closest.above, NA)\n    } else {\n      first.idx$closest.above <- c(first.idx$closest.above, which.min(temp))\n    }\n    temp = strike.diff\n    temp[strike.diff>=0]=NA\n    temp[is.na(csv.useful[day,])]=NA\n    if(all(is.na(temp))) {\n      first.idx$closest.below <- c(first.idx$closest.below, NA)\n    } else {\n      first.idx$closest.below <- c(first.idx$closest.below, which.min(abs(temp)))\n    }\n  }\n  return(first.idx)\n}\n\nget.buy.point <- function(first.idx) {\n  #chose a buy day and buying the closest above strike option for positive breakout\n  buy.day <- first.idx$pos.breakout\n  strike.sel.idx <- NA\n  mode <- NA\n  if(buy.day>0) {# && min.mul.fac <= mulfac[first.idx$closest.above[buy.day] - offset]&&mulfac[first.idx$closest.above[buy.day] - offset] <= max.mul.fac) {\n    mode=\"PosBrkout\"\n    strike.sel.idx <- first.idx$closest.above[buy.day]\n    # strike.sel.idx <- first.idx$closest.below[buy.day]\n  } else {\n    #No positive breakout\n    #chose a buy day and buying the closest below strike option for negative breakout\n    buy.day <- first.idx$neg.beakout\n    if(buy.day>0) {# && min.mul.fac <= mulfac[first.idx$closest.above[buy.day] - offset - 1]&&mulfac[first.idx$closest.above[buy.day] - offset - 1] <= max.mul.fac) {\n      mode=\"NegBrkout\"\n      strike.sel.idx <- first.idx$closest.below[buy.day]\n      # strike.sel.idx <- first.idx$closest.above[buy.day]\n    }\n  }\n  return(list(buy.day=buy.day,strike.sel.idx=strike.sel.idx, mode=mode ))\n}\n\nget.buy.info <- function(buy.day, strike.sel.idx) {\n  buy.info <- list()\n  buy.info$buy.at <- NA\n  buy.info$nCall.prev <- NA\n  buy.info$nPut.prev <- NA\n  buy.info$nCall <- NA\n  buy.info$nPut <- NA\n  if(8 <= (nrow(csv.useful) - buy.day) && (nrow(csv.useful) - buy.day) <= 60) {\n    #Since you are buying next day midday after the breakout\n    buy.info$nCall.prev = 1\n    buy.info$nPut.prev = csv.useful[buy.day, strike.sel.idx]/csv.useful[buy.day, strike.sel.idx + 1]\n    eod.prev.day <- buy.info$nCall.prev*csv.useful[buy.day, strike.sel.idx]+\n      buy.info$nPut.prev*csv.useful[buy.day, strike.sel.idx + 1]\n    buy.info$nCall = 1\n    buy.info$nPut = csv.useful[buy.day+1, strike.sel.idx]/csv.useful[buy.day+1, strike.sel.idx + 1]\n    eod.day <- buy.info$nCall*csv.useful[buy.day+1, strike.sel.idx] +\n      buy.info$nPut*csv.useful[buy.day+1, strike.sel.idx + 1]\n\n    buy.info$buy.at <- eod.prev.day+eod.day\n  }\n  if(buy.info$nPut <= 0.25 || buy.info$buy.at < 4*min.buy.value) buy.info$buy.at = NA\n  return(buy.info)\n}\n\nstoploss <- function(csv.useful, strike.sel.idx, buy.day, buy.at) {\n  if(is.stoploss.enabled) {\n    return (buy.day+which(csv.useful[(buy.day+1):nrow(csv.useful),strike.sel.idx] <= (buy.at/4)/f)[1])\n  } else {\n    return(NA)\n  }\n}\n\ntarget <- function(csv.useful, strike.sel.idx, buy.day, buy.at) {\n  if(is.target.enabled) {\n    return (buy.day+which(csv.useful[(buy.day+1):nrow(csv.useful),strike.sel.idx] >= f*(buy.at/4))[1]);\n  } else {\n    return(NA)\n  }\n}\n\nget.sell.details <- function(csv.useful, buy.point, buy.info) {\n  sell.day <- list()\n  sell.day$call <- nrow(csv.useful)\n  sell.day$put <- nrow(csv.useful)\n  comments <- c()\n  call.first.stoploss <- stoploss(csv.useful, buy.point$strike.sel.idx, buy.point$buy.day, buy.info$buy.at)\n  call.first.target <- target(csv.useful, buy.point$strike.sel.idx, buy.point$buy.day, buy.info$buy.at)\n  # print(call.first.stoploss)\n  # print(call.first.target)\n  if(is.na(call.first.stoploss) && is.na(call.first.target)) {\n    #do nothing\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.call.expiry.hit\", PosBrkout.call.expiry.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.call.expiry.hit\")\n    } else {\n      assign(\"NegBrkout.call.expiry.hit\", NegBrkout.call.expiry.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.call.expiry.hit\")\n    }\n  } else if(is.na(call.first.stoploss) && !is.na(call.first.target)) {\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.call.target.hit\", PosBrkout.call.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.call.target.hit\")\n    } else {\n      assign(\"NegBrkout.call.target.hit\", NegBrkout.call.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.call.target.hit\")\n    }\n    sell.day$call <- call.first.target\n  } else if(!is.na(call.first.stoploss) && is.na(call.first.target)) {\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.call.stoploss.hit\", PosBrkout.call.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.call.stoploss.hit\")\n    } else {\n      assign(\"NegBrkout.call.stoploss.hit\", NegBrkout.call.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.call.stoploss.hit\")\n    }\n    sell.day$call <- call.first.stoploss\n  } else if(call.first.stoploss <= call.first.target) {\n\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.call.stoploss.hit\", PosBrkout.call.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.call.stoploss.hit\")\n    } else {\n      assign(\"NegBrkout.call.stoploss.hit\", NegBrkout.call.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.call.stoploss.hit\")\n    }\n    sell.day$call <- call.first.stoploss\n  } else {\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.call.target.hit\", PosBrkout.call.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.call.target.hit\")\n    } else {\n      assign(\"NegBrkout.call.target.hit\", NegBrkout.call.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.call.target.hit\")\n    }\n    sell.day$call <- call.first.target\n  }\n\n  put.first.stoploss <- stoploss(csv.useful, buy.point$strike.sel.idx+1, buy.point$buy.day,buy.info$buy.at)\n  put.first.target <- target(csv.useful, buy.point$strike.sel.idx+1, buy.point$buy.day,buy.info$buy.at)\n  # print(put.first.stoploss)\n  # print(put.first.target)\n  if(is.na(put.first.stoploss) && is.na(put.first.target)) {\n    #do nothing\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.put.expiry.hit\", PosBrkout.put.expiry.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.put.expiry.hit\")\n    } else {\n      assign(\"NegBrkout.put.expiry.hit\", PosBrkout.put.expiry.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.put.expiry.hit\")\n    }\n  } else if(is.na(put.first.stoploss) && !is.na(put.first.target)) {\n\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.put.target.hit\", PosBrkout.put.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.put.target.hit\")\n    } else {\n      assign(\"NegBrkout.put.target.hit\", NegBrkout.put.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.put.target.hit\")\n    }\n    sell.day$put <- put.first.target\n  } else if(!is.na(put.first.stoploss) && is.na(put.first.target)) {\n\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.put.stoploss.hit\", PosBrkout.put.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.put.stoploss.hit\")\n    } else {\n      assign(\"NegBrkout.put.stoploss.hit\", NegBrkout.put.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.put.stoploss.hit\")\n    }\n    sell.day$put <- put.first.stoploss\n  } else if(put.first.stoploss <= put.first.target) {\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.put.stoploss.hit\", PosBrkout.put.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.put.stoploss.hit\")\n    } else {\n      assign(\"NegBrkout.put.stoploss.hit\", NegBrkout.put.stoploss.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.put.stoploss.hit\")\n    }\n    sell.day$put <- put.first.stoploss\n  } else {\n    if(buy.point$mode==\"PosBrkout\") {\n      assign(\"PosBrkout.put.target.hit\", PosBrkout.put.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"PosBrkout.put.target.hit\")\n    } else {\n      assign(\"NegBrkout.put.target.hit\", NegBrkout.put.target.hit + 1, envir = .GlobalEnv)\n      comments = c(comments, \"NegBrkout.put.target.hit\")\n    }\n    sell.day$put <- put.first.target\n  }\n  return(list(sell.day=sell.day, sell.type=comments))\n}\n\nalgorithm <- function(scrip, csv.useful, first.idx) {\n  buy.point <- get.buy.point(first.idx)\n  if(!anyNA(buy.point) && buy.point$buy.day > 0) {\n    buy.info <- get.buy.info(buy.point$buy.day, buy.point$strike.sel.idx)\n    if(!anyNA(buy.info)) {\n      sell.details <- get.sell.details(csv.useful, buy.point, buy.info)\n      sell.at <- (buy.info$nCall.prev + buy.info$nCall)*csv.useful[sell.details$sell.day$call, buy.point$strike.sel.idx] +\n        (buy.info$nPut.prev + buy.info$nPut)*csv.useful[sell.details$sell.day$put, buy.point$strike.sel.idx + 1]\n      returns = 100 * (sell.at - buy.info$buy.at) / buy.info$buy.at\n      #print(paste0(scrip,\":\",returns[[1]][[1]]))\n      scrip.returns <- data.frame(company=c(scrip),\n                                  returns=c(returns[[1]][[1]]),\n                                  breakout=c(csv.useful[buy.point$buy.day,ncol(csv.useful)]),\n                                  strike.sel.idx=c(names(csv.useful)[buy.point$strike.sel.idx]),\n                                  nPut.nCall.ratio=c(buy.info$nPut),\n                                  buy.day=c(csv.useful[buy.point$buy.day,1]),\n                                  sold.at=c(sell.at),\n                                  sell.day=c(csv.useful[sell.details$sell.day$call,1]),\n                                  sell.type=c(paste0(sell.details$sell.type[1],\" \",sell.details$sell.type[2])))\n    }\n  }\n  return(scrip.returns);\n}\n\nsymbols=get.symbols()#[10:184]\n\nfor(expiryDate in exp.dates) {\n  #expiryDate = exp.dates[1]\n  g.scrip.returns <- data.frame();\n\n  for(scrip in symbols) {\n    if(!(scrip %in% c('CADILAHC', 'ONGC', 'MCDOWELL', 'BEML', 'DRREDDY'))){\n      #scrip=symbols[34]#\"EICHER\"#CROMPGREAV\"\n      tryCatch({\n        files <- list.files(path = paste0(base,expiryDate,\"/\"), pattern = scrip)\n        csv.useful <- prepapre.csv.useful(files)\n        first.idx <- get.firsts(files, csv.useful)\n        if(nrow(g.scrip.returns)==0){\n          g.scrip.returns <- algorithm(scrip, csv.useful, first.idx)\n        }else{\n          g.scrip.returns <- rbind(g.scrip.returns, algorithm(scrip, csv.useful, first.idx))\n        }\n      }, error = function(error) {\n      })\n    }\n  }\n  g.scrip.returns$returns <- as.numeric(g.scrip.returns$returns)\n  print(paste0(\"Monthly.Ret:\", mean(g.scrip.returns$returns,na.rm = T), \" Calls:\", nrow(g.scrip.returns), \" Wins: \", sum(g.scrip.returns$returns>1.5,na.rm = T), \" Losses: \", sum(g.scrip.returns$returns<=1.5,na.rm = T)))\n  if(nrow(gg.scrip.returns)==0){\n    gg.scrip.returns <- g.scrip.returns\n  }else{\n    gg.scrip.returns <- rbind(gg.scrip.returns, g.scrip.returns)\n  }\n\n}\n\n# print(paste0(\"PosBrkoutCallStoplossHit=\", PosBrkout.put.stoploss.hit))\n# print(paste0(\"PosBrkoutPutStoplossHit=\", PosBrkout.put.stoploss.hit))\n# print(paste0(\"PosBrkoutCallTargetHit=\", PosBrkout.call.target.hit))\n# print(paste0(\"PosBrkoutPutTargetHit=\", PosBrkout.put.target.hit))\n# print(paste0(\"PosBrkoutCallExpiryHit=\", PosBrkout.call.expiry.hit))\n# print(paste0(\"PosBrkoutPutExpiryHit=\", PosBrkout.put.expiry.hit))\n#\n# print(paste0(\"NegBrkoutCallStoplossHit=\",NegBrkout.call.stoploss.hit))\n# print(paste0(\"NegBrkoutPutStoplossHit=\", NegBrkout.put.stoploss.hit))\n# print(paste0(\"NegBrkoutCallTargetHit=\", NegBrkout.call.target.hit))\n# print(paste0(\"NegBrkoutPutTargetHit=\", NegBrkout.put.target.hit))\n# print(paste0(\"NegBrkoutCallExpiryHit=\", NegBrkout.call.expiry.hit))\n# print(paste0(\"NegBrkoutPutExpiryHit=\", NegBrkout.put.expiry.hit))\n#printmetrics()\nprint(paste0(\"Overall.Ret:\", mean(gg.scrip.returns$returns,na.rm = T), \" Calls:\", nrow(gg.scrip.returns), \" Wins: \", sum(gg.scrip.returns$returns>1.5,na.rm = T), \" Losses: \", sum(gg.scrip.returns$returns<=1.5,na.rm = T)))\n",
    "created" : 1471966467017.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3489945781",
    "id" : "DE6160C6",
    "lastKnownWriteTime" : 1471981602,
    "path" : "~/Desktop/NSECEPE/BreakoutBasedOptionsStrategy/BreakoutBasedOptionsStrategy/R/NSE_CEPE_ANALYTICS_BALANCED_COVERED_CALLS.R",
    "project_path" : "R/NSE_CEPE_ANALYTICS_BALANCED_COVERED_CALLS.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}